<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:t="http://java.sun.com/jsf/composite/telveComponents"
                xmlns:c="http://java.sun.com/jsp/jstl/core"
                xmlns:p="http://primefaces.org/ui">

    <ui:define name="extraHead">
        <h:outputScript library="raf" name="js/locale-compare.js"/>
    </ui:define>

    <h:form id="rmtForm">
    </h:form>
    
    <div id="data" />

    <ui:remove>
    <script>
        data = [
            <ui:repeat value="#{folderSidePanel.folders}" var="folder">
                {"id": "#{folder.id}", "parent": "#{folder.parentId}", "text": "#{folder.title}" },
                </ui:repeat>
        ];
        <ui:remove>
        selectedNode = '#{rafController.selectedRaf.id}';
        </ui:remove>
        
    </script>
        </ui:remove>

    <script type="text/javascript">

        var init = true;
        const urlParams = new URLSearchParams(window.location.search);
        var staticLinkId = urlParams.get("o");

        function buildTree() {
            // inline data

            jQuery("#data")
                    .on("activate_node.jstree", function (e, data) {
                        //alert( data.instance.get_node(data.selected[0]).id );
                        e.preventDefault();
                        selectTreeNode([{'name': 'nodeId', 'value': data.node.id}]);
                    })
                    .jstree({
                        "plugins": ["wholerow", "types", "sort"],
                        "types": {
                            "default": {
                                "icon": "fa fa-folder"
                            }
                        },
                        'core': {
                            'open_parents': true,
                            'data': {
                                'url' : "rest/folderData",
                                'data' : function(node) {
                                    return {
                                        'id' : node.id,
                                        'raf' : '#{rafController.rafCode}',
                                        'init': init,
                                        'findUntilId': staticLinkId
                                    };
                                }
                            }
                        },
                        'sort': function(a, b) {
                            a1 = this.get_node(a).text.charAt(0);
                            b1 = this.get_node(b).text.charAt(0);

                            return a1.localeCompare(b1, 'tr');
                        }
                    });
        }
        
        buildTree();
        init = false;

        function setNodeSelections() {
            if (jQuery('#data').length > 0) {
                jQuery('#data').jstree().select_node(selectedNode);
            }
        }

        //setNodeSelections();

        function openSelectedNodes(...nodes) {
            let deffereds = jQuery.Deferred(function (def) { def.resolve(); });
            jQuery("#data").jstree().deselect_all(true);
            nodes.forEach(node => {
                deffereds = (function(name, deferreds) {
                    return deferreds.pipe(function () {
                        return jQuery.Deferred(function(def) {
                            jQuery("#data").jstree("open_node", name, function () {
                                jQuery('#data').jstree("select_node", nodes.reduceRight(node => node));
                                def.resolve();
                            });
                        });
                    });
                })(node, deffereds);
            });
        }

    </script>
    
</ui:composition>

