<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:p="http://primefaces.org/ui"
                xmlns:c="http://java.sun.com/jsp/jstl/core"
                template="/layout/dialogBase.xhtml">

    <ui:param name="title" value="#{messages['fileUploadDialog.caption']}"/>
    <ui:define name="form">
        <h:outputStylesheet library="raf" name="css/raf.css" />

        <h:form id="fileUploadHeader">
            <p:remoteCommand name="closeDialog" action="#{rafFileUploadDialog.closeDialog()}"/>
            <p:confirmDialog id="closeConfirmation"
                             width="450"
                             header="#{messages['general.caption.Confirm']}"
                             message="#{messages['fileUploadDialog.close.confirmation.message']}"
                             widgetVar="closeConfirmation"
                             showEffect="fade">
                <p:commandButton value="#{messages['general.button.No']}" onclick="PF('closeConfirmation').hide();" type="button" styleClass="ui-confirmdialog-no pull-right" icon="ui-icon-close" />
                <p:commandButton value="#{messages['general.button.Yes']}" onclick="closeDialog()" type="button" styleClass="ui-confirmdialog-yes pull-right" icon="ui-icon-check" />
            </p:confirmDialog>

            <input type="hidden" id="already-added-text" value="#{messages['file.already.added']}"/>
            <p:remoteCommand name="sendFileUploadEvent" action="#{rafFileUploadDialog.fileUploaded}"
                             onstart="window.parent.PF('statusDialog').show()"
                             oncomplete="window.parent.PF('statusDialog').hide()"/>
            <p:remoteCommand name="isAlreadyUploaded" action="#{fileUploadAction.isAlreadyUploaded}"
                             oncomplete="getAlreadyUploadedResult(xhr, status, args);"/>

            <ui:fragment rendered="#{fileUploadAction.rafCode eq 'CHECKIN'}">
                <div class="row">
                    <p:outputLabel value="#{messages['fileUploadDialog.label.versionComment']}"/>
                    <p:inputTextarea id="versionComment"/>
                </div>
            </ui:fragment>
            <div class="row">
                <div class="DashboardContainer"></div>
                <h:outputScript library="webjars" name="/telve-uppy/0.30.4/uppy-bundle.js"/>
                <script>
                    var uppyLocale;
                    var ALREADY_ADDED_FILE_LIST = [];
                    if ('#{localeSelector.language}' === 'tr') {
                        uppyLocale = Uppy.Locale.turkish;
                    }
                    var versionLocale;
                    if ('#{fileUploadAction.rafCode}' === 'CHECKIN') {
                        versionLocale = {
                            strings: {
                                dropPaste: "#{localeSelector.language eq 'tr' ? 'Yeni sürümü buraya sürükleyip bırak, yapıştır veya %{browse}' : 'Drop new version here, paste or %{browse}'}",
                                uploadXFiles: {
                                    0: "#{localeSelector.language eq 'tr' ? 'Yeni Sürüm Ekle' : 'Add New Version'}",
                                    1: "#{localeSelector.language eq 'tr' ? 'Yeni Sürüm Ekle' : 'Add New Version'}"
                                }
                            }
                        }
                    }
                    var uppy = Uppy.Core({
                        allowMultipleUploads: #{fileUploadAction.rafCode eq 'CHECKIN' ? false : true},
                        debug: false,
                        autoProceed: #{fileUploadAction.rafCode eq 'CHECKIN' ? false : true},
                        locale: uppyLocale,
                        restrictions: {
                            maxFileSize: #{rafFileUploadDialog.maxFileSize != null ? rafFileUploadDialog.maxFileSize : 'null'},
                            maxNumberOfFiles: #{rafFileUploadDialog.maxNumberOfFiles != null ? rafFileUploadDialog.maxNumberOfFiles : 'null'},
                            allowedFileTypes: #{rafFileUploadDialog.allowedFileTypes != null ? rafFileUploadDialog.allowedFileTypes : 'null'}
                        },
                        onBeforeFileAdded: (currentFile, files) => {
                            isAlreadyUploaded([{'name': 'filename', 'value': currentFile.name}]);
                        }
                    })
                        .use(Uppy.Dashboard, {
                            inline: true,
                            target: '.DashboardContainer',
                            replaceTargetContent: true,
                            height: #{fileUploadAction.rafCode eq 'CHECKIN' ? 300 : 400},
                            locale: versionLocale
                        })
                        .use(Uppy.Tus, {
                            endpoint: '#{rafFileUploadDialog.endPoint}',
                            chunkSize: #{rafFileUploadDialog.chunkSize}
                        });

                    uppy.on('complete', (result) => {
                        window.parent.PF('statusDialog').show();
                        setTimeout(function () {
                            var uriArr = [];
                            result.successful.forEach((file) => {
                                if (ALREADY_ADDED_FILE_LIST.includes(file.name)) {
                                    uppy.removeFile(file.id);
                                } else {
                                    uriArr.push(file.uploadURL);
                                }
                            });

                            if (ALREADY_ADDED_FILE_LIST.length > 0) {
                                uppy.info(ALREADY_ADDED_FILE_LIST.join(",") + ' ' + $("#already-added-text").val(), 'error', 3000);
                                ALREADY_ADDED_FILE_LIST = [];
                            }

                            if (uriArr.length > 0) {
                                sendFileUploadEvent([
                                    {'name': 'uriArr', 'value': uriArr},
                                    {'name': 'versionComment', 'value': $('#fileUploadHeader\\:versionComment').val()}
                                ]);
                            } else {
                                window.parent.PF('statusDialog').hide();
                            }

                        }, 1500)
                    });

                    function getAlreadyUploadedResult(xhr, status, args) {
                        if (args.isAlreadyUploaded) {
                            ALREADY_ADDED_FILE_LIST.push(args.value)
                        }
                    }

                    parent.window.uppy = uppy;

                    const closeWithUploadCheck = () => {
                        if (Object.keys(uppy.getState().currentUploads).length > 0) {
                            PF('closeConfirmation').show();
                        } else {
                            closeDialog();
                        }
                    }

                    setTimeout(() => {
                        const closeButtonEl = $(this.wd[0]).find(".ui-dialog-titlebar-close");
                        if (closeButtonEl !== undefined) {
                            closeButtonEl.replaceWith(closeButtonEl.clone());

                            const el = $(this.wd[0]).find(".ui-dialog-titlebar-close");
                            el.on('click', function(event) {
                                event.stopImmediatePropagation();
                                event.stopPropagation();
                                event.preventDefault();
                                closeWithUploadCheck();
                            })
                        }

                    }, 1000);

                </script>
            </div>
            <h:panelGroup styleClass="row actionButtons" layout="block">
                <h:panelGrid columns="1" style="margin-right:10px" cellpadding="5">
                    <p:outputLabel styleClass="text-muted" value="#{messages['fileUploadDialog.label.path'].concat(' ').concat(fileUploadAction.getUserFriendlyRafPath())}"></p:outputLabel>
                </h:panelGrid>
                <c:if test="#{fileUploadAction.rafCode ne 'CHECKIN'}">
                    <h:panelGrid columns="1" style="margin-right:10px" cellpadding="5">
                        <p:selectBooleanCheckbox value="#{rafFileUploadDialog.decompress}"
                                                 itemLabel="#{messages['fileUploadDialog.autoExtractZipFiles']}"/>
                    </h:panelGrid>
                </c:if>
                <p:commandButton id="close"
                                 value="#{messages['general.button.Close']}"
                                 icon="ui-icon-close"
                                 onclick="closeWithUploadCheck()"
                                 partialSubmit="true"
                                 styleClass="btn-primary"
                                 process="@this"/>
            </h:panelGroup>
        </h:form>
    </ui:define>
</ui:composition>